/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const DashboardLazyRouteImport = createFileRoute('/dashboard')()

const DashboardLazyRoute = DashboardLazyRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardLazyRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof DashboardLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/dashboard': typeof DashboardLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboard'
  id: '__root__' | '/dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardLazyRoute: typeof DashboardLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  DashboardLazyRoute: DashboardLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
